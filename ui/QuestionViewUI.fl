# data file for the FLTK User Interface Designer (FLUID)
version 2.1000 
images_dir header_name 
header_name {.h} 
code_name {.cxx} 
gridx 5 
gridy 5 
snap 3
decl {\#include "config.h"} {} 

class QuestionViewUI {open
} {
  Function {QuestionViewUI()} {open
  } {
    {fltk::Window} mainWindow {open
      xywh {360 54 800 600} resizable visible
    } {
      {fltk::Group} {} {open
        private xywh {0 0 800 600}
      } {
        {fltk::Group} LeftGroup {open
          private xywh {5 5 450 590} resizable box THIN_DOWN_BOX
        } {
          {fltk::Group} QuestionGroup {open
            private xywh {5 5 440 520} box THIN_UP_BOX
          } {
            {fltk::TextDisplay} questionDisplay {
              label {Question \#/\#}
              xywh {5 20 430 130} align 1 labeltype ENGRAVED_LABEL labelsize 18 textsize 16
              extra_code {o->wrap_mode(true);}
            }
            {fltk::Group} AnswerGroup {open
              xywh {5 155 430 355} box THIN_DOWN_BOX
            } {
              {fltk::RadioButton} {answerRB[0]} {
                label {Answer 0}
                user_data 0 user_data_type long
                callback {cb_answerSelected(o,v)}
                xywh {5 4 420 85} align 164 buttonbox BORDER_BOX labelsize 16 textsize 16
              }
              {fltk::RadioButton} {answerRB[1]} {
                label {Answer 1}
                user_data 1 user_data_type long
                callback {cb_answerSelected(o,v)}
                xywh {5 91 420 85} align 164 buttonbox BORDER_BOX labelsize 16 textsize 16
              }
              {fltk::RadioButton} {answerRB[2]} {
                label {Answer 2}
                user_data 2 user_data_type long
                callback {cb_answerSelected(o,v)}
                xywh {5 178 420 85} align 164 buttonbox BORDER_BOX labelsize 16 textsize 16
              }
              {fltk::RadioButton} {answerRB[3]} {
                label {Answer 3}
                user_data 3 user_data_type long
                callback {cb_answerSelected(o,v)}
                xywh {5 265 420 85} align 164 buttonbox BORDER_BOX labelsize 16 textsize 16
              }
            }
          }
          {fltk::Group} MainControlsGroup {open
            private xywh {5 530 440 57} box THIN_UP_BOX
          } {
            {fltk::Button} exitBtn {
              label _Cancel
              callback {cb_close()} selected
              private xywh {9 8 130 40} labelfont 1 shortcut 0xff1b
            }
            {fltk::Button} fullscreenBtn {
              label _Fullscreen
              callback {cb_fullscreen()}
              private xywh {157 8 130 40} type TOGGLE labelfont 1
            }
            {fltk::Button} auxBtn {
              label _Aux
              private xywh {302 8 130 40} deactivate labelfont 1
            }
          }
        }
        {fltk::Group} RightGroup {
          private xywh {455 5 340 590} box THIN_DOWN_BOX
        } {
          {fltk::Widget} imageHolder {
            xywh {5 5 330 300}
          }
          {fltk::Group} QuestionControlsGroup {open
            private xywh {5 310 330 275} resizable box THIN_UP_BOX
          } {
            {fltk::Button} validateBtn {
              label {_Validate Answer  @+1+}
              user_data {"validate"} user_data_type {const char*}
              callback {cb_next(o,v)}
              xywh {15 25 300 100} deactivate labeltype EMBOSSED_LABEL labelsize 16
            }
            {fltk::Button} nextBtn {
              label {_Next Question  @+1>@+1>[]}
              user_data {"next"} user_data_type {const char*}
              callback {cb_next(o,v)}
              xywh {15 150 300 100} labeltype EMBOSSED_LABEL labelsize 16
            }
          }
        }
      }
    }
  }
  Function {cb_close()} {return_type void attributes virtual
  } {}
  Function {cb_fullscreen()} {open return_type void attributes virtual
  } {}
  Function {cb_answerSelected(fltk::Widget *pRB, long rbId)} {return_type void attributes virtual
  } {}
  Function {cb_next(fltk::Widget* pBtn, const char* btn)} {open return_type void attributes virtual
  } {}
} 
