# data file for the FLTK User Interface Designer (FLUID)
version 2.1000 
images_dir header_name 
header_name {.h} 
code_name {.cxx} 
gridx 5 
gridy 5 
snap 3
decl {\#include "config.h"} {} 

decl {\#include <fltk/Group.h>} {public
} 

decl {\#include "TimerProgressBar.h"} {public
} 

class QuestionUIAbstract {open : {public fltk::Group}
} {
  Function {QuestionUIAbstract(int x, int y, int width, int height, const char* label): fltk::Group(x,y,width,height,label)} {open
  } {
    {fltk::Window} mainContainer {open
      xywh {122 68 800 580} resizable
      class {fltk::Group} visible
    } {
      {fltk::Group} LeftGroup {open
        private xywh {5 5 450 570} resizable box THIN_DOWN_BOX
      } {
        {fltk::Group} QuestionGroup {
          label {Question \#/\#} open
          xywh {5 5 440 510} align 33 box THIN_UP_BOX labeltype ENGRAVED_LABEL labelsize 18 textsize 18
        } {
          {fltk::Button} questionDisplay {
            label button
            callback {cb_questionRelease()}
            xywh {5 20 430 120} align 165 buttonbox DOWN_BOX buttoncolor 0xffffff00 labelsize 16 textsize 16
          }
          {fltk::Group} AnswerGroup {
            xywh {5 145 430 355} box THIN_DOWN_BOX
          } {
            {fltk::RadioButton} {answerRB[0]} {
              label {Answer 0}
              user_data 0 user_data_type long
              callback {cb_answerSelected(o,v)}
              xywh {5 4 420 85} align 164 buttonbox RSHADOW_BOX labelsize 16 textsize 16
            }
            {fltk::RadioButton} {answerRB[1]} {
              label {Answer 1}
              user_data 1 user_data_type long
              callback {cb_answerSelected(o,v)}
              xywh {5 91 420 85} align 164 buttonbox RSHADOW_BOX labelsize 16 textsize 16
            }
            {fltk::RadioButton} {answerRB[2]} {
              label {Answer 2}
              user_data 2 user_data_type long
              callback {cb_answerSelected(o,v)}
              xywh {5 178 420 85} align 164 buttonbox RSHADOW_BOX labelsize 16 textsize 16
            }
            {fltk::RadioButton} {answerRB[3]} {
              label {Answer 3}
              user_data 3 user_data_type long
              callback {cb_answerSelected(o,v)}
              xywh {5 265 420 85} align 164 buttonbox RSHADOW_BOX labelsize 16 textsize 16
            }
          }
        }
        {fltk::Group} MainControlsGroup {open
          private xywh {5 520 440 47} box THIN_UP_BOX
        } {
          {fltk::Button} exitBtn {
            label _Cancel
            callback {cb_close()}
            xywh {9 8 130 30} labelfont 1 shortcut 0xff1b
          }
          {fltk::Button} fullscreenBtn {
            label _Fullscreen
            callback {cb_fullscreen()}
            xywh {157 8 130 30} type TOGGLE labelfont 1 shortcut 0xffc8
          }
          {fltk::LightButton} soundBtn {
            label _Dictation
            callback {cb_soundToggle()}
            xywh {302 8 130 30} labelfont 1
          }
        }
      }
      {fltk::Group} RightGroup {open
        private xywh {455 5 340 570} box THIN_DOWN_BOX
      } {
        {fltk::Widget} imageHolder {selected
          xywh {5 5 330 300}
        }
        {fltk::Group} QuestionControlsGroup {open
          private xywh {5 310 330 255} resizable box THIN_UP_BOX
        } {
          {fltk::ProgressBar} timer {
            callback {cb_timeout()}
            xywh {15 16 300 30}
            class TimerProgressBar
          }
          {fltk::Button} validateBtn {
            label {_Validate Answer  @+1+}
            user_data {"validate"} user_data_type {const char*}
            callback {cb_next(o,v)}
            xywh {15 60 300 90} deactivate labeltype EMBOSSED_LABEL labelsize 16
          }
          {fltk::Button} nextBtn {
            label {_Next Question  @+1>@+1>[]}
            user_data {"next"} user_data_type {const char*}
            callback {cb_next(o,v)}
            xywh {15 157 300 90} labeltype EMBOSSED_LABEL labelsize 16
          }
        }
      }
    }
  }
  Function {cb_close()} {open return_type void attributes virtual
  } {}
  Function {cb_fullscreen()} {return_type void attributes virtual
  } {}
  Function {cb_answerSelected(fltk::Widget *pRB, long rbId)} {open return_type void attributes virtual
  } {}
  Function {cb_next(fltk::Widget* pBtn, const char* btn)} {open return_type void attributes virtual
  } {}
  Function {cb_timeout()} {return_type void attributes virtual
  } {}
  Function {cb_questionRelease()} {open return_type void attributes virtual
  } {}
  Function {cb_soundToggle()} {open return_type void attributes virtual
  } {}
} 
